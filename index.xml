<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dev Journey on</title><link>/log/</link><description>Recent content in Dev Journey on</description><generator>Hugo -- gohugo.io</generator><atom:link href="/log/index.xml" rel="self" type="application/rss+xml"/><item><title>About</title><link>/log/about/</link><pubDate>Tue, 01 Feb 2022 00:00:00 +0000</pubDate><guid>/log/about/</guid><description>About These journal entries are to help my future self remember odds and ends.
§ DIY Gemini by design encourages the client implementation to be done in ~100 LOC.</description></item><item><title/><link>/log/posts/20220201-pf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/log/posts/20220201-pf/</guid><description>OpenBSD PF Router =&amp;gt; OpenBSD PF Router Build =&amp;gt; Home Router Build =&amp;gt; Ars Linux Router Build =&amp;gt; Router7 Build
§1 /Networking Used the guide exactly to set hostname.</description></item><item><title/><link>/log/posts/20220202-vger/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/log/posts/20220202-vger/</guid><description>Gemini, the Middle Child Between Mercury and Apollo Here is the short list of articles that helped us configure:
=&amp;gt; Gemini server configuration on OpenBSD =&amp;gt; Vger Gemini server =&amp;gt; OpenBSD and Let&amp;rsquo;s Encrypt</description></item><item><title/><link>/log/posts/20220501-isv/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/log/posts/20220501-isv/</guid><description>TLS InsecureSkipVerify =&amp;gt; VerifyConnection =&amp;gt; TLS Steps =&amp;gt; Solderpunk Demo3 =&amp;gt; SSL/TLS
§1 /Certificates Let&amp;rsquo;s Encrypt is a tremendous life saver. It eliminated the mystery and wall around certificates.</description></item><item><title/><link>/log/posts/20220502-iihk/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/log/posts/20220502-iihk/</guid><description>SSH InsecureIgnoreHostKey =&amp;gt; SSH Host Key =&amp;gt; TLS Steps =&amp;gt; SSH
§1 /TOFU Among our tasks was how to mimic the way SSH negotiates the first connection to a remote.</description></item><item><title/><link>/log/posts/20221029-vncviewer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/log/posts/20221029-vncviewer/</guid><description>VNC Viewer =&amp;gt; Encryption AlwaysOff =&amp;gt; FreeBSD New =&amp;gt; FreeBSD Maintenance
§1 /Xorg For the vncviewer, run X11 on FreeBSD
visudo sudo freebsd-update fetch install sudo pkg update sudo pkg upgrade sudo pkg install drm-kmod sudo pkg install xorg sudo pkg install dwm sudo echo &amp;#39;kld_list=&amp;#34;i915kms&amp;#34;&amp;#39; &amp;gt;&amp;gt; /etc/rc.</description></item><item><title/><link>/log/posts/20221207-tunnel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/log/posts/20221207-tunnel/</guid><description>Cloudflare Tunnel =&amp;gt; Install cloudflared =&amp;gt; Honk Manual
§1 /Cloudflared For FreeBSD, the makefile has the line indicating how to build cloudflared:
git clone --depth=1 https://github.</description></item><item><title>Build</title><link>/log/diybuild/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/log/diybuild/</guid><description>Build Step 1 /Raspi Technically, a Raspi is not required. The server hardware is your choice. See @DavidAns&amp;#39; Sky-Hole article for a virtual machine installation.</description></item><item><title>DIY Raspi Sinkhole</title><link>/log/diyraspi/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/log/diyraspi/</guid><description>Introduction Pi-hole, but pared down? The first question you have after assembling your Raspi is easily, &amp;quot;What can we run?&amp;quot; There&amp;#39;s no shortage of projects.</description></item><item><title>Make Changes</title><link>/log/sinkhole/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/log/sinkhole/</guid><description>Make Changes Improving on a good thing Kyle Harding&amp;#39;s Docker image and Oznu&amp;#39;s zone list are great, and a wealth of information when you scan through their Dockerfile, and javascript.</description></item><item><title>Raspi DNS Sinkhole</title><link>/log/2020/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/log/2020/</guid><description>Raspi DNS Sinkhole fight the ads
Easiest ▷ See ad blocking magic in action for yourself! Just use the ready-made Docker image and zone list (klutchell/unbound + oznu/dns-zone-blacklist).</description></item><item><title>Subsystems</title><link>/log/diysubsys/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/log/diysubsys/</guid><description>Subsystems Diagram Blue dashed path represent traditional DNS resolution. Yellow solid path highlights the ad blocking.
Modules Raspberry Pi Ubuntu Server arm64 image Unbound DNS zones conversion Next</description></item><item><title>Unbound</title><link>/log/ezunbound/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/log/ezunbound/</guid><description>Unbound Easy Docker, Happy Life For the easiest path to block ads, seeing is believing. So the best demonstration is getting things running quickly.</description></item></channel></rss>